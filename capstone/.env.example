
SOURCE_PG_USER=

# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FERNET_KEY=gYXmZNx1_koBoGG6SDgQlSIs2HywV_UhU4du-iwu9Y8=

SOURCE_PG_USER=drhendrixx
SOURCE_PG_DB=ecommerce
SOURCE_PG_HOST=localhost
SOURCE_PG_PASS=hendrixx
SOURCE_PG_PORT=5433


AIRFLOW_PG_DB=airflow
AIRFLOW_PG_USER=airflow
AIRFLOW_PG_PASS=airflow

REDIS_PASSWORD=redispass

# Airflow
AIRFLOW_IMAGE_NAME=apache/airflow:2.7.2
AIRFLOW_UID=$(id -u)
AIRFLOW_GID=$(id -g)
AIRFLOW_PROJ_DIR=.
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
AIRFLOW_CORE_FERNET_KEY=gYXmZNx1_koBoGG6SDgQlSIs2HywV_UhU4du-iwu9Y8=
AIRFLOW_DATABASE_SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
AIRFLOW_CORE_SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
AIRFLOW_CONN_SOURCE_POSTGRES=postgresql+psycopg2://drhendrixx:hendrixx@source-postgres/ecommerce
_AIRFLOW_WWW_USER_USERNAME=airflow
_AIRFLOW_WWW_USER_PASSWORD=airflow
AIRFLOW_PG_HOST=source-postgres

AIRFLOW__CORE__TEST_CONNECTION=Enabled

# Metadatabase PostgreSQL
POSTGRES_USER=airflow
POSTGRES_PASSWORD=airflow
POSTGRES_DB=airflow

# Airflow Core
AIRFLOW_UID=1000
AIRFLOW_GID=1000
HOSTNAME=airflow-postgres
# Airflow Webserver Authentication
_AIRFLOW_WWW_USER_USERNAME=airflow
_AIRFLOW_WWW_USER_PASSWORD=airflow
# Redis
REDIS_PASSWORD=redispass
# Airflow Core Configuration
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
AIRFLOW__CORE__LOAD_EXAMPLES=False
# Airflow Database Configuration
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
# Airflow Celery Configuration
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
AIRFLOW__CELERY__BROKER_URL=redis://:redispass@redis:6379/0
# Fernet Key (for encrypting passwords in the database)
AIRFLOW__CORE__FERNET_KEY=gYXmZNx1_koBoGG6SDgQlSIs2HywV_UhU4du-iwu9Y8=
# Airflow API Configuration
AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
# Airflow Scheduler Configuration
AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK=True

#HNDRX